@using Pokewordle.Shared.HtmlUtil;
@using System.Collections.Immutable;
@using Pokewordle.Shared.Util;

@* <link href="/css/owncss/custom.css" rel="stylesheet" /> *@
@if (Visible)
{
    <tr>
        @if (TableCells is null)
        {
            <td>Loading . . .</td>
        }
        else
        {
            @for (int i = 0; i < TableCells.Count; i++)
            {
                ICellData tableCell = TableCells[i];
                int obfuscationIndex = ObfuscationList is not null ? ObfuscationList.IndexOf(tableCell.ColumnType) : int.MaxValue;
                <TemplateCell TableCell=tableCell ObfuscationIndex="obfuscationIndex" IsSolution=IsSolution></TemplateCell>
            }
        }
    </tr>
}


@code {
    //private bool firstCell = true;
    [Parameter]
    [EditorRequired]
    public Task<IList<ICellData>>? TableCellsTask { get; set; }

    [Parameter]
    [EditorRequired]
    public bool Visible { get; set; }

    [Parameter]
    [EditorRequired]
    public bool IsSolution { get; set; }

    [Parameter]
    [EditorRequired]
    public IImmutableList<ColumnType>? ObfuscationList { get; set; }

    public IList<ICellData>? TableCells { get; set; }


    protected override async Task OnInitializedAsync()
    {
        TableCells = await TableCellsTask;
    }

    protected override async Task OnParametersSetAsync()
    {
        //Console.WriteLine("OnUpdateRow");
        //TableCells = await TableCellsTask;
        await base.OnParametersSetAsync();
    }

}
